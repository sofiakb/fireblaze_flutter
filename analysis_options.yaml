# This file configures the analyzer, which statically analyzes Dart code to
# check for errors, warnings, and lints.
#
# The issues identified by the analyzer are surfaced in the UI of Dart-enabled
# IDEs (https://dart.dev/tools#ides-and-editors). The analyzer can also be
# invoked from the command line by running `flutter analyze`.

# The following line activates a set of recommended lints for Flutter apps,
# packages, and plugins designed to encourage good coding practices.
include: package:flutter_lints/flutter.yaml

linter:
  # The lint rules applied to this project can be customized in the
  # section below to disable rules from the `package:flutter_lints/flutter.yaml`
  # included above or to enable additional rules. A list of all available lints
  # and their documentation is published at
  # https://dart-lang.github.io/linter/lints/index.html.
  #
  # Instead of disabling a lint rule for the entire project in the
  # section below, it can also be suppressed for a single line of code
  # or a specific dart file by using the `// ignore: name_of_lint` and
  # `// ignore_for_file: name_of_lint` syntax on the line or in the file
  # producing the lint.
  rules:
  # avoid_print: false  # Uncomment to disable the `avoid_print` rule
  # prefer_single_quotes: true  # Uncomment to enable the `prefer_single_quotes` rule

# Additional information about this file can be found at
# https://dart.dev/guides/language/analysis-options
analyzer:
  exclude:
    - "**/*.g.dart"
    - "**/*.freezed.dart"
  errors:
    invalid_annotation_target: ignore
    # This list is derived from the list of all available lints located at
    # https://github.com/dart-lang/linter/blob/main/example/all.yaml
    always_declare_return_types: error
    always_put_control_body_on_new_line: error
    # always_put_required_named_parameters_first: error # we prefer having parameters in the same order as fields https://github.com/flutter/flutter/issues/10219
    always_specify_types: error
    # always_use_package_imports: error # we do this commonly
    annotate_overrides: error
    # avoid_annotating_with_dynamic: error # conflicts with always_specify_types
    avoid_bool_literals_in_conditional_expressions: error
    # avoid_catches_without_on_clauses: error # blocked on https://github.com/dart-lang/linter/issues/3023
    # avoid_catching_errors: error # blocked on https://github.com/dart-lang/linter/issues/3023
    # avoid_classes_with_only_static_members: error # we do this commonly for `abstract final class`es
    avoid_double_and_int_checks: error
    avoid_dynamic_calls: error
    avoid_empty_else: error
    avoid_equals_and_hash_code_on_mutable_classes: error
    avoid_escaping_inner_quotes: error
    avoid_field_initializers_in_const_classes: error
    # avoid_final_parameters: error # incompatible with prefer_final_parameters
    avoid_function_literals_in_foreach_calls: error
    # avoid_implementing_value_types: error # see https://github.com/dart-lang/linter/issues/4558
    avoid_init_to_null: error
    avoid_js_rounded_ints: error
    # avoid_multiple_declarations_per_line: error # seems to be a stylistic choice we don't subscribe to
    avoid_null_checks_in_equality_operators: error
    # avoid_positional_boolean_parameters: error # would have been nice to enable this but by now there's too many places that break it
    avoid_print: error
    # avoid_private_typedef_functions: error # we prefer having typedef (discussion in https://github.com/flutter/flutter/pull/16356)
    avoid_redundant_argument_values: error
    avoid_relative_lib_imports: error
    avoid_renaming_method_parameters: error
    avoid_return_types_on_setters: error
    avoid_returning_null_for_void: error
    avoid_setters_without_getters: error
    avoid_shadowing_type_parameters: error
    avoid_single_cascade_in_expression_statements: error
    avoid_slow_async_io: error
    avoid_type_to_string: error
    avoid_types_as_parameter_names: error
    # avoid_types_on_closure_parameters: error # conflicts with always_specify_types
    avoid_unnecessary_containers: error
    avoid_unused_constructor_parameters: error
    avoid_void_async: error
    # avoid_web_libraries_in_flutter: error # we use web libraries in web-specific code, and our tests prevent us from using them elsewhere
    await_only_futures: error
    camel_case_extensions: error
    camel_case_types: error
    cancel_subscriptions: error
    # cascade_invocations: error # doesn't match the typical style of this repo
    cast_nullable_to_non_nullable: error
    # close_sinks: error # not reliable enough
    collection_methods_unrelated_type: error
    combinators_ordering: error
    # comment_references: error # blocked on https://github.com/dart-lang/linter/issues/1142
    conditional_uri_does_not_exist: error
    # constant_identifier_names: error # needs an opt-out https://github.com/dart-lang/linter/issues/204
    control_flow_in_finally: error
    curly_braces_in_flow_control_structures: error
    dangling_library_doc_comments: error
    depend_on_referenced_packages: error
    deprecated_consistency: error
    # deprecated_member_use_from_same_package: error # we allow self-references to deprecated members
    # diagnostic_describe_all_properties: error # enabled only at the framework level (packages/flutter/lib)
    directives_ordering: error
    # discarded_futures: error # too many false positives, similar to unawaited_futures
    # do_not_use_environment: error # there are appropriate times to use the environment, especially in our tests and build logic
    empty_catches: error
    empty_constructor_bodies: error
    empty_statements: error
    eol_at_end_of_file: error
    exhaustive_cases: error
    file_names: error
    flutter_style_todos: error
    hash_and_equals: error
    implementation_imports: error
    implicit_call_tearoffs: error
    implicit_reopen: error
    invalid_case_patterns: error
    # join_return_with_assignment: error # not required by flutter style
    leading_newlines_in_multiline_strings: error
    library_annotations: error
    library_names: error
    library_prefixes: error
    library_private_types_in_public_api: error
    # lines_longer_than_80_chars: error # not required by flutter style
    literal_only_boolean_expressions: error
    # matching_super_parameters: error # blocked on https://github.com/dart-lang/language/issues/2509
    missing_whitespace_between_adjacent_strings: error
    no_adjacent_strings_in_list: error
    no_default_cases: error
    no_duplicate_case_values: error
    no_leading_underscores_for_library_prefixes: error
    no_leading_underscores_for_local_identifiers: error
    no_literal_bool_comparisons: error
    no_logic_in_create_state: error
    # no_runtimeType_toString: error # ok in tests; we enable this only in packages/
    no_self_assignments: error
    no_wildcard_variable_uses: error
    non_constant_identifier_names: error
    noop_primitive_operations: error
    null_check_on_nullable_type_parameter: error
    null_closures: error
    # omit_local_variable_types: error # opposite of always_specify_types
    # one_member_abstracts: error # too many false positives
    only_throw_errors: error # this does get disabled in a few places where we have legacy code that uses strings et al
    overridden_fields: error
    package_api_docs: error
    package_names: error
    package_prefixed_library_names: error
    # parameter_assignments: error # we do this commonly
    prefer_adjacent_string_concatenation: error
    prefer_asserts_in_initializer_lists: error
    # prefer_asserts_with_message: error # not required by flutter style
    prefer_collection_literals: error
    prefer_conditional_assignment: error
    prefer_const_constructors: error
    prefer_const_constructors_in_immutables: error
    prefer_const_declarations: error
    prefer_const_literals_to_create_immutables: error
    # prefer_constructors_over_static_methods: error # far too many false positives
    prefer_contains: error
    # prefer_double_quotes: error # opposite of prefer_single_quotes
    # prefer_expression_function_bodies: error # conflicts with https://github.com/flutter/flutter/wiki/Style-guide-for-Flutter-repo#consider-using--for-short-functions-and-methods
    prefer_final_fields: error
    prefer_final_in_for_each: error
    prefer_final_locals: error
    # prefer_final_parameters: error # adds too much verbosity
    prefer_for_elements_to_map_fromIterable: error
    prefer_foreach: error
    prefer_function_declarations_over_variables: error
    prefer_generic_function_type_aliases: error
    prefer_if_elements_to_conditional_expressions: error
    prefer_if_null_operators: error
    prefer_initializing_formals: error
    prefer_inlined_adds: error
    # prefer_int_literals: error # conflicts with https://github.com/flutter/flutter/wiki/Style-guide-for-Flutter-repo#use-double-literals-for-double-constants
    prefer_interpolation_to_compose_strings: error
    prefer_is_empty: error
    prefer_is_not_empty: error
    prefer_is_not_operator: error
    prefer_iterable_whereType: error
    prefer_mixin: error
    # prefer_null_aware_method_calls: error # "call()" is confusing to people new to the language since it's not documented anywhere
    prefer_null_aware_operators: error
    prefer_relative_imports: error
    prefer_single_quotes: error
    prefer_spread_collections: error
    prefer_typing_uninitialized_variables: error
    prefer_void_to_null: error
    provide_deprecation_message: error
    # public_member_api_docs: error # enabled on a case-by-case basis; see e.g. packages/analysis_options.yaml
    recursive_getters: error
    # require_trailing_commas: error # would be nice, but requires a lot of manual work: 10,000+ code locations would need to be reformatted by hand after bulk fix is applied
    secure_pubspec_urls: error
    sized_box_for_whitespace: error
    sized_box_shrink_expand: error
    slash_for_doc_comments: error
    sort_child_properties_last: error
    sort_constructors_first: error
    # sort_pub_dependencies: error # prevents separating pinned transitive dependencies
    sort_unnamed_constructors_first: error
    test_types_in_equals: error
    throw_in_finally: error
    tighten_type_of_initializing_formals: error
    # type_annotate_public_apis: error # subset of always_specify_types
    type_init_formals: error
    type_literal_in_constant_pattern: error
    # unawaited_futures: error # too many false positives, especially with the way AnimationController works
    unnecessary_await_in_return: error
    unnecessary_brace_in_string_interps: error
    unnecessary_breaks: error
    unnecessary_const: error
    unnecessary_constructor_name: error
    # unnecessary_final: error # conflicts with prefer_final_locals
    unnecessary_getters_setters: error
    # unnecessary_lambdas: error # has false positives: https://github.com/dart-lang/linter/issues/498
    unnecessary_late: error
    unnecessary_library_directive: error
    unnecessary_new: error
    unnecessary_null_aware_assignments: error
    unnecessary_null_aware_operator_on_extension_on_nullable: error
    unnecessary_null_checks: error
    unnecessary_null_in_if_null_operators: error
    unnecessary_nullable_for_final_variable_declarations: error
    unnecessary_overrides: error
    unnecessary_parenthesis: error
    # unnecessary_raw_strings: error # what's "necessary" is a matter of opinion; consistency across strings can help readability more than this lint
    unnecessary_statements: error
    unnecessary_string_escapes: error
    unnecessary_string_interpolations: error
    unnecessary_this: error
    unnecessary_to_list_in_spreads: error
    unreachable_from_main: error
    unrelated_type_equality_checks: error
    unsafe_html: error
    use_build_context_synchronously: error
    use_colored_box: error
    # use_decorated_box: error # leads to bugs: DecoratedBox and Container are not equivalent (Container inserts extra padding)
    use_enums: error
    use_full_hex_values_for_flutter_colors: error
    use_function_type_syntax_for_parameters: error
    use_if_null_to_convert_nulls_to_bools: error
    use_is_even_rather_than_modulo: error
    use_key_in_widget_constructors: error
    use_late_for_private_fields_and_variables: error
    use_named_constants: error
    use_raw_strings: error
    use_rethrow_when_possible: error
    use_setters_to_change_properties: error
    # use_string_buffers: error # has false positives: https://github.com/dart-lang/sdk/issues/34182
    use_string_in_part_of_directives: error
    use_super_parameters: error
    use_test_throws_matchers: error
    # use_to_and_as_if_applicable: error # has false positives, so we prefer to catch this by code-review
    valid_regexps: error
    void_checks: error